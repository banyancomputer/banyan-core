{
  "openapi": "3.0.0",
  "info": {
    "title": "Banyan Staging Service API",
    "version": "1.0.0"
  },
  "paths": {
    "/hooks/distribute": {
      "post": {
        "summary": "Distribute data to a new host",
        "operationId": "distributeData",
        "tags": [
          "Hooks"
        ],
        "security": [
          {
            "PlatformIdentity": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data distribution task enqueued successfully"
          },
          "400": {
            "description": "Upload not found or task already present",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "A backend service issue occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/hooks/blocks": {
      "delete": {
        "summary": "Delete blocks of data",
        "operationId": "deleteBlocks",
        "security": [
          {
            "PlatformIdentity": []
          }
        ],
        "tags": [
          "Hooks"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBlocksRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Blocks deleted successfully"
          },
          "400": {
            "description": "Could not delete blocks or task missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "A backend service issue occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload/new": {
      "post": {
        "summary": "Create a new upload session",
        "operationId": "createNewUpload",
        "tags": [
          "Upload"
        ],
        "security": [
          {
            "AuthenticatedClient": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New upload session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "upload_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, possibly due to missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "A backend service issue occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "summary": "Upload a CAR file",
        "operationId": "uploadCarFile",
        "tags": [
          "Upload"
        ],
        "security": [
          {
            "AuthenticatedClient": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request-data": {
                    "type": "string",
                    "format": "binary"
                  },
                  "car-upload": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "CAR file uploaded successfully"
          },
          "400": {
            "description": "Bad request, possibly due to missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "413": {
            "description": "Payload too large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity, possibly due to client stream issues",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "A backend service issue occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload/block": {
      "post": {
        "summary": "Upload a block of data",
        "operationId": "uploadBlock",
        "tags": [
          "Blocks"
        ],
        "security": [
          {
            "AuthenticatedClient": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request-data": {
                    "type": "string",
                    "format": "binary"
                  },
                  "block": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Block uploaded successfully"
          },
          "400": {
            "description": "Bad request, possibly due to missing or invalid fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Upload session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict, possibly due to trying to write to a completed upload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "413": {
            "description": "Payload too large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "A backend service issue occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/who_am_i": {
      "get": {
        "summary": "Retrieve the identity of the authenticated user",
        "operationId": "getAuthenticatedUserIdentity",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "AuthenticatedClient": []
          }
        ],
        "responses": {
          "200": {
            "description": "User identity retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "consumed_storage": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "platform_id": {
                      "type": "string"
                    },
                    "remaining_storage": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{block_id}": {
      "get": {
        "summary": "Retrieve a block by its ID",
        "operationId": "getBlockById",
        "tags": [
          "Blocks"
        ],
        "security": [
          {
            "AuthenticatedClient": []
          },
          {
            "PlatformIdentity": []
          }
        ],
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "description": "The ID of the block to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Block data retrieved successfully",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid block ID provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Block not found or not owned by the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/client_grant": {
      "post": {
        "summary": "Grant a client access to storage",
        "operationId": "grantClientAccess",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "AuthenticatedClient": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Storage grant was successful"
          },
          "400": {
            "description": "Storage grant has already been recorded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/core/prune": {
      "post": {
        "summary": "Prune blocks",
        "operationId": "pruneBlocks",
        "tags": [
          "Blocks"
        ],
        "security": [
          {
            "PlatformIdentity": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Blocks pruning initiated successfully"
          },
          "400": {
            "description": "Request contained an invalid CID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "AuthenticatedClient": {
        "description": "Self-signed JWT token for client authentication",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "PlatformIdentity": {
        "type": "http",
        "description": "Core service identity token for inter-service communication",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "StorageGrant": {
        "type": "http",
        "description": "Core service generate grant allowing clients to access storage",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "GrantRequest": {
        "type": "object",
        "required": [
          "public_key"
        ],
        "properties": {
          "public_key": {
            "type": "string",
            "description": "The public key of the client to grant storage access"
          }
        }
      },
      "DeleteBlocksRequest": {
        "type": "object",
        "required": [
          "normalized_cids",
          "metadata_id"
        ],
        "properties": {
          "normalized_cids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "metadata_id": {
            "type": "string"
          },
          "reset_storage_grant": {
            "type": "object",
            "nullable": true,
            "properties": {
              "old_grant_id": {
                "type": "string"
              },
              "new_grant_id": {
                "type": "string"
              },
              "new_grant_size": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "DistributeData": {
        "type": "object",
        "required": [
          "metadata_id",
          "storage_grant_id",
          "storage_grant_size",
          "block_cids",
          "new_host_id",
          "new_host_url"
        ],
        "properties": {
          "metadata_id": {
            "type": "string"
          },
          "storage_grant_id": {
            "type": "string"
          },
          "storage_grant_size": {
            "type": "integer",
            "format": "int64"
          },
          "block_cids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "new_host_id": {
            "type": "string"
          },
          "new_host_url": {
            "type": "string"
          }
        }
      },
      "NewUploadRequest": {
        "type": "object",
        "required": [
          "metadata_id",
          "client_id",
          "grant_size",
          "grant_id"
        ],
        "properties": {
          "metadata_id": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "grant_size": {
            "type": "integer",
            "format": "int64"
          },
          "grant_id": {
            "type": "string"
          }
        }
      },
      "GrantResetRequest": {
        "type": "object",
        "properties": {
          "old_grant_id": {
            "type": "string"
          },
          "new_grant_id": {
            "type": "string"
          },
          "new_grant_size": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          }
        }
      }
    }
  }
}
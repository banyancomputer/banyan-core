{
  "version": 3,
  "sources": ["../node_modules/localforage/dist/localforage.js", "../src/index.ts", "../src/ecc/index.ts", "../node_modules/one-webcrypto/browser.mjs", "../src/utils.ts", "../node_modules/multiformats/esm/src/bases/identity.js", "../node_modules/multiformats/esm/vendor/base-x.js", "../node_modules/multiformats/esm/src/bytes.js", "../node_modules/multiformats/esm/src/bases/base.js", "../node_modules/multiformats/esm/src/bases/base2.js", "../node_modules/multiformats/esm/src/bases/base8.js", "../node_modules/multiformats/esm/src/bases/base10.js", "../node_modules/multiformats/esm/src/bases/base16.js", "../node_modules/multiformats/esm/src/bases/base32.js", "../node_modules/multiformats/esm/src/bases/base36.js", "../node_modules/multiformats/esm/src/bases/base58.js", "../node_modules/multiformats/esm/src/bases/base64.js", "../node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../node_modules/multiformats/esm/vendor/varint.js", "../node_modules/multiformats/esm/src/varint.js", "../node_modules/multiformats/esm/src/hashes/digest.js", "../node_modules/multiformats/esm/src/hashes/hasher.js", "../node_modules/multiformats/esm/src/hashes/identity.js", "../node_modules/multiformats/esm/src/codecs/json.js", "../node_modules/multiformats/esm/src/cid.js", "../node_modules/multiformats/esm/src/basics.js", "../node_modules/uint8arrays/esm/src/util/bases.js", "../node_modules/uint8arrays/esm/src/from-string.js", "../node_modules/uint8arrays/esm/src/to-string.js", "../src/types.ts", "../src/errors.ts", "../src/constants.ts", "../src/ecc/keys.ts", "../src/aes/keys.ts", "../src/aes/operations.ts", "../src/aes/index.ts", "../src/hkdf/operations.ts", "../src/hkdf/index.ts", "../src/ecc/operations.ts", "../src/config.ts", "../src/idb.ts"],
  "sourcesContent": ["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "import * as ecc from './ecc/index.js'\nimport * as config from './config.js'\nimport * as constants from './constants.js'\nimport * as utils from './utils.js'\nimport * as idb from './idb.js'\nimport * as types from './types.js'\n\nexport default {\n  ...types,\n  ...constants,\n  ...config,\n  ...utils,\n  ecc,\n  idb,\n}\n", "import keys from './keys.js';\nimport operations from './operations.js';\n\nexport * from './keys.js';\nexport * from './operations.js';\n\nexport default {\n  ...keys,\n  ...operations,\n};\n", "const _globalReference = globalThis || window || self\n\nexport const webcrypto = _globalReference.crypto\n", "import { webcrypto } from 'one-webcrypto';\nimport * as uint8arrays from 'uint8arrays';\nimport errors from './errors';\nimport { CharSize, EccCurve, ExportKeyFormat, Msg, PublicKey } from './types';\nimport { DEFAULT_SALT_LENGTH } from './constants';\n\n/* Cryto */\n\n// Generate a public exponent\nexport function publicExponent(): Uint8Array {\n\treturn new Uint8Array([0x01, 0x00, 0x01]);\n}\n\nexport function eccCurveToBitLength(namedCurve: EccCurve): number {\n\t// Get the integer following 'P-'\n\tconst bitLength = parseInt(namedCurve.slice(2), 10);\n\tif (isNaN(bitLength) || bitLength % 8 !== 0) {\n\t\tthrow errors.InvalidEccCurve;\n\t}\n\treturn bitLength;\t\n}\n\n/**\n * Fingerprint an ec public key -- does not generalize to curves other than P-384\n */\nexport async function fingerprintEcPublicKey(\n\tpublicKey: PublicKey\n  ): Promise<Uint8Array> {\n\tconst publicKeyBytes = await webcrypto.subtle.exportKey(\n\t\tExportKeyFormat.RAW,\n\t\tpublicKey\n\t).then((key) => new Uint8Array(key));\n\n\t// TODO: Fix for other curves\n\t// NOTE: This makes it so that we can't use any curve other than P-384\n\tconst size = 49;\n\tconst compressedPoint = new Uint8Array(size);\n\tconst x = publicKeyBytes.slice(1, size);\n\tconst y = publicKeyBytes.slice(size);\n  \n\t// Note:\n\t// first byte is 0x02 or 0x03 depending on the parity of the\n\t// y-coordinate, followed by the x coordinate. We can't technically\n\t// figure out whether the y-coodinate is odd without doing big number\n\t// arithmetic, but this is a fair approximation.\n\tcompressedPoint[0] = y[y.length - 1] % 2 === 0 ? 0x02 : 0x03;\n\tcompressedPoint.set(x, 1);\n  \n\tconst hash = await webcrypto.subtle.digest('SHA-1', compressedPoint);\n\treturn new Uint8Array(hash);\n  }\n\n// Interpret a Uint8Array as a fingerprint\nexport function prettyFingerprint(buf: Uint8Array): string {\n\treturn Array.from(buf)\n\t\t.map((b) => b.toString(16).padStart(2, '0'))\n\t\t.join(':');\n}\n\n\n// How we join an iv and cipher into a cipher text\nexport function joinCipherText(\n\tivBuf: ArrayBuffer,\n\tcipherBuf: ArrayBuffer\n): ArrayBuffer {\n\tconst wrapIvBuf = new Uint8Array(ivBuf);\n\tconst wrapCipherBuf = new Uint8Array(cipherBuf);\n\tconst joined = new Uint8Array(\n\t\twrapIvBuf.length + 1 + wrapCipherBuf.length\n\t);\n\tjoined.set(wrapIvBuf);\n\t// Set the delimeter at the end of the iv. It's a period (46)\n\tjoined.set([46], wrapIvBuf.length);\n\tjoined.set(wrapCipherBuf, wrapIvBuf.length + 1);\n\treturn joined.buffer;\n}\n\n// How we split a cipher text into an iv and cipher\nexport function splitCipherText(\n\tcipherText: ArrayBuffer,\n\tsaltLength: number = DEFAULT_SALT_LENGTH\n): [ArrayBuffer, ArrayBuffer] {\n\tconst wrapCipherText = new Uint8Array(cipherText);\n\t// delimeter is a period\n\tconst ivBuf = wrapCipherText.slice(0, saltLength);\n\t// Check for delimeter -- the DEFAULT_SALT_LENGTH + 1 th byte should be a period (46)\n\tif (wrapCipherText[saltLength] !== 46) {\n\t\tthrow errors.InvalidCipherText;\n\t}\n\n\tconst cipherBuf = wrapCipherText.slice(saltLength + 1);\n\n\treturn [ivBuf, cipherBuf];\n}\n\n/* Normalize _ to ArrayBuffer */\n\nexport const normalizeUtf8ToBuf = (msg: Msg): ArrayBuffer => {\n\treturn normalizeToBuf(msg, (str) => strToArrBuf(str, CharSize.B8));\n};\n\nexport const normalizeUtf16ToBuf = (msg: Msg): ArrayBuffer => {\n\treturn normalizeToBuf(msg, (str) => strToArrBuf(str, CharSize.B16));\n};\n\nexport const normalizeBase64ToBuf = (msg: Msg): ArrayBuffer => {\n\treturn normalizeToBuf(msg, base64ToArrBuf);\n};\n\nexport const normalizeUnicodeToBuf = (msg: Msg, charSize: CharSize) => {\n\tswitch (charSize) {\n\t\tcase 8:\n\t\t\treturn normalizeUtf8ToBuf(msg);\n\t\tdefault:\n\t\t\treturn normalizeUtf16ToBuf(msg);\n\t}\n};\n\n/* Array Buffer to _ */\n\nexport function arrBufToStr(buf: ArrayBuffer, charSize: CharSize): string {\n\tconst arr = charSize === 8 ? new Uint8Array(buf) : new Uint16Array(buf);\n\treturn Array.from(arr)\n\t\t.map((b) => String.fromCharCode(b))\n\t\t.join('');\n}\n\nexport function arrBufToBase64(buf: ArrayBuffer): string {\n\treturn uint8arrays.toString(new Uint8Array(buf), 'base64pad');\n}\n\n/* _ to Array Buffer */\n\nexport function strToArrBuf(str: string, charSize: CharSize): ArrayBuffer {\n\tconst view =\n\t\tcharSize === 8 ? new Uint8Array(str.length) : new Uint16Array(str.length);\n\tfor (let i = 0, strLen = str.length; i < strLen; i++) {\n\t\tview[i] = str.charCodeAt(i);\n\t}\n\treturn view.buffer;\n}\n\nexport function base64ToArrBuf(string: string): ArrayBuffer {\n\treturn uint8arrays.fromString(string, 'base64pad').buffer;\n}\n\n/* Misc */\n\nexport function randomBuf(\n\tlength: number,\n\t{ max }: { max: number } = { max: 255 }\n): ArrayBuffer {\n\tif (max < 1 || max > 255) {\n\t\tthrow errors.InvalidMaxValue;\n\t}\n\n\tconst arr = new Uint8Array(length);\n\n\tif (max == 255) {\n\t\twebcrypto.getRandomValues(arr);\n\t\treturn arr.buffer;\n\t}\n\n\tlet index = 0;\n\tconst interval = max + 1;\n\tconst divisibleMax = Math.floor(256 / interval) * interval;\n\tconst tmp = new Uint8Array(1);\n\n\twhile (index < arr.length) {\n\t\twebcrypto.getRandomValues(tmp);\n\t\tif (tmp[0] < divisibleMax) {\n\t\t\tarr[index] = tmp[0] % interval;\n\t\t\tindex++;\n\t\t}\n\t}\n\n\treturn arr.buffer;\n}\n\nexport function joinBufs(fst: ArrayBuffer, snd: ArrayBuffer): ArrayBuffer {\n\tconst view1 = new Uint8Array(fst);\n\tconst view2 = new Uint8Array(snd);\n\tconst joined = new Uint8Array(view1.length + view2.length);\n\tjoined.set(view1);\n\tjoined.set(view2, view1.length);\n\treturn joined.buffer;\n}\n\nexport const normalizeToBuf = (\n\tmsg: Msg,\n\tstrConv: (str: string) => ArrayBuffer\n): ArrayBuffer => {\n\tif (typeof msg === 'string') {\n\t\treturn strConv(msg);\n\t} else if (typeof msg === 'object' && msg.byteLength !== undefined) {\n\t\t// this is the best runtime check I could find for ArrayBuffer/Uint8Array\n\t\tconst temp = new Uint8Array(msg);\n\t\treturn temp.buffer;\n\t} else {\n\t\tthrow new Error(\n\t\t\t'Improper value. Must be a string, ArrayBuffer, Uint8Array'\n\t\t);\n\t}\n};\n\n/* istanbul ignore next */\nexport async function structuralClone(obj: any) {\n\treturn new Promise((resolve) => {\n\t\tconst { port1, port2 } = new MessageChannel();\n\t\tport2.onmessage = (ev) => resolve(ev.data);\n\t\tport1.postMessage(obj);\n\t});\n}\n\nexport default {\n\tjoinCipherText,\n\tfingerprintEcPublicKey,\n\tprettyFingerprint,\n\teccCurveToBitLength,\n\tsplitCipherText,\n\tarrBufToStr,\n\tarrBufToBase64,\n\tstrToArrBuf,\n\tbase64ToArrBuf,\n\tpublicExponent,\n\trandomBuf,\n\tjoinBufs,\n\tnormalizeUtf8ToBuf,\n\tnormalizeUtf16ToBuf,\n\tnormalizeBase64ToBuf,\n\tnormalizeToBuf,\n\tstructuralClone,\n};\n", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    const decoders = {\n      [this.prefix]: this,\n      ...decoder.decoders || { [decoder.prefix]: decoder }\n    };\n    return new ComposedDecoder(decoders);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    const other = decoder.decoders || { [decoder.prefix]: decoder };\n    return new ComposedDecoder({\n      ...this.decoders,\n      ...other\n    });\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  async digest(input) {\n    if (input instanceof Uint8Array) {\n      const digest = await this.encode(input);\n      return Digest.create(this.code, digest);\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { from } from './hasher.js';\nimport { coerce } from '../bytes.js';\nexport const identity = from({\n  name: 'identity',\n  code: 0,\n  encode: input => coerce(input)\n});", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}", "export type Msg = ArrayBuffer | string | Uint8Array\n\nexport type CipherText = ArrayBuffer\nexport type SymmKey = CryptoKey\nexport type SymmWrappingKey = CryptoKey\n\nexport type PublicKey = CryptoKey\nexport type PrivateKey = CryptoKey\n\nexport type Config = {\n  // Asymmetric Configuration\n  exchangeAlg: string\n  writeAlg: string\n  curve: EccCurve\n\n  // Symmetric Configuration\n  symmAlg: SymmAlg\n  symmKeyLength: SymmKeyLength\n  // derivedBitLength: DerivedBitLength\n  \n  // Hash Configuration\n  hashAlg: HashAlg\n  charSize: CharSize\n  \n  // Key Store Configuration\n  storeName: string\n  exchangeKeyPairName: string\n  writeKeyPairName: string\n  escrowKeyName: string\n}\n\nexport type EscrowedKeyPair = {\n  publicKeyStr: string\n  wrappedPrivateKeyStr: string\n}\n\nexport type SymmKeyOpts = {\n  alg: SymmAlg\n  length: SymmKeyLength\n  iv: ArrayBuffer\n}\n\nexport enum ExportKeyFormat {\n  PKCS8 = 'pkcs8',\n  SPKI = 'spki',\n  RAW = 'raw',\n}\n\nexport enum CryptoSystem {\n  ECC = 'ecc',\n}\n\nexport enum EccCurve {\n  P_384 = 'P-384',\n}\n\nexport enum SymmAlg {\n  AES_GCM = 'AES-GCM',\n  AES_KW = 'AES-KW',\n}\n\nexport enum SymmKeyLength {\n  B256 = 256,\n  B384 = 384,\n  B512 = 512,\n}\n\nexport enum HashAlg {\n  SHA_256 = 'SHA-256',\n  SHA_384 = 'SHA-384',\n  SHA_512 = 'SHA-512',\n}\n\nexport enum CharSize {\n  B8 = 8,\n  B16 = 16,\n}\n\nexport enum KeyUse {\n  Exchange = 'exchange',\n  Write = 'write',\n}\n\nexport interface KeyStore {\n  cfg: Config\n\n  /* Keystore Management */\n\n  keyExists(keyName: string): Promise<boolean>\n  keyPairExists(keyPairName: string): Promise<boolean>\n  deleteKey(keyName: string): Promise<void>\n  destroy(): Promise<void>\n\n  /* Asymmetric Keys -- defines the keystore */\n\n  // Getters and Exporters\n  getExchangeKeyPair: () => Promise<CryptoKeyPair>\n  getWriteKeyPair: () => Promise<CryptoKeyPair>\n\n  /* Escrow Key -- used to wrap and recover assymmetric keys */\n\n  deriveEscrowKey(\n    passphrase: string,\n    saltStr?: string,\n    cfg?: Partial<Config>\n  ): Promise<string>\n\n  /* Symmetric Keys */\n\n  // Key Generation and Import\n  genSymmKey(\n    keyName: string,\n    uses: KeyUsage[],\n    cfg?: Partial<Config>\n  ): Promise<void>\n  importSymmKey(\n    keyStr: string,\n    keyName: string,\n    uses: KeyUsage[],\n    cfg?: Partial<Config>\n  ): Promise<void>\n\n  // Getters and Exporters\n  getSymmKey(keyName: string): Promise<CryptoKey>\n  exportSymmKey(\n    keyName: string,\n  ): Promise<string>\n  \n  // Key Operations\n  encryptWithSymmKey(\n    msg: string,\n    keyName: string,\n    cfg?: Partial<Config>\n  ): Promise<string>\n  decryptWithSymmKey(\n    cipherText: string,\n    keyName: string,\n    cfg?: Partial<Config>\n  ): Promise<string>\n  wrapKeyWithSymmKey(\n    keyToWrap: CryptoKey,\n    keyName: string,\n    cfg?: Partial<Config>\n  ): Promise<CipherText>\n  unwrapKeyWithSymmKey(\n    wrappedKey: CipherText,\n    keyName: string,\n    keyParams: AlgorithmIdentifier,\n    extractable: boolean,\n    uses: KeyUsage[],\n    cfg?: Partial<Config>\n  ): Promise<CryptoKey>\n}\n", "import { KeyUse, CryptoSystem } from './types.js'\n\nexport const KeyDoesNotExist = new Error(\"Key does not exist. Make sure you properly instantiated the keystore.\")\nexport const NotKeyPair = new Error(\"Retrieved a symmetric key when an asymmetric keypair was expected. Please use a different key name.\")\nexport const NotKey = new Error(\"Retrieved an asymmetric keypair when an symmetric key was expected. Please use a different key name.\")\nexport const ECCNotEnabled = new Error(\"ECC is not enabled for this browser.\")\nexport const UnsupportedAsymmCrypto = new Error(\"Cryptosystem not supported. Please use ECC\")\nexport const UnsupportedSymmCrypto = new Error(\"Cryptosystem not supported. Please use AES-GCM\")\nexport const UnsupportedSymmWrappingCrypto = new Error(\"Cryptosystem not supported. Please use AES-KW\")\nexport const UnsupportedKeyFormat = new Error(\"Key format not supported for this cryptosystem or operation\")\nexport const InvalidKeyUse = new Error(\"Invalid key use. Please use 'exchange' or 'write\")\nexport const InvalidMaxValue = new Error(\"Max must be less than 256 and greater than 0\")\nexport const InvalidIvLength = new Error(\"IV must be 16 bytes\")\nexport const InvalidCipherTextLength = new Error(\"Cipher text must align on AES-GCM block (16 bytes) boundary\")\nexport const InvalidCipherText = new Error(\"Invalid cipher text\")\nexport const InvalidEccCurve = new Error(\"Invalid ECC curve. Please use P-384 or P-521\")\n\nexport function checkIsKeyPair(keypair: any): CryptoKeyPair {\n  if (!keypair || keypair === null) {\n    throw KeyDoesNotExist\n  } else if (keypair.privateKey === undefined) {\n    throw NotKeyPair\n  }\n  return keypair as CryptoKeyPair\n}\n\nexport function checkIsKey(key: any): CryptoKey {\n  if (!key || key === null) {\n    throw KeyDoesNotExist\n  } else if (key.privateKey !== undefined || key.algorithm === undefined) {\n    throw NotKey\n  }\n  return key\n}\n\nexport function checkValidCryptoSystem(type: CryptoSystem): void {\n  checkValid(type, [CryptoSystem.ECC], UnsupportedAsymmCrypto)\n}\n\nexport function checkValidKeyUse(use: KeyUse): void {\n  checkValid(use, [KeyUse.Exchange, KeyUse.Write], InvalidKeyUse)\n}\n\nfunction checkValid<T>(toCheck: T, opts: T[], error: Error): void {\n  const match = opts.some(opt => opt === toCheck)\n  if (!match) {\n    throw error\n  }\n}\n\nexport default {\n  KeyDoesNotExist,\n  NotKeyPair,\n  NotKey,\n  ECCNotEnabled,\n  UnsupportedAsymmCrypto,\n  InvalidKeyUse,\n  checkIsKeyPair,\n  checkIsKey,\n  checkValidCryptoSystem,\n  checkValidKeyUse,\n  InvalidMaxValue,\n  InvalidIvLength,\n  InvalidCipherTextLength,\n  InvalidCipherText,\n  InvalidEccCurve\n}\n", "import { EccCurve, SymmAlg, SymmKeyLength, HashAlg, CharSize } from './types.js'\n\n// This library is highly opinionated towards ECC. If you want to use RSA, you'll need to change these values, and\n// refactor the code to support RSA.\nexport const ECC_EXCHANGE_ALG = 'ECDH'\nexport const ECC_WRITE_ALG = 'ECDSA'\n\nexport const DEFAULT_ECC_CURVE = EccCurve.P_384\nexport const DEFAULT_SALT_LENGTH = 16 // bytes -- idk why I have to specify it this way, but I do\n\nexport const DEFAULT_SYMM_ALG = SymmAlg.AES_GCM\nexport const DEFAULT_SYMM_KEY_LENGTH = SymmKeyLength.B256\n\nexport const DEFAULT_HASH_ALG = HashAlg.SHA_256\nexport const DEFAULT_CHAR_SIZE = CharSize.B16\n\nexport const DEFAULT_STORE_NAME = 'keystore'\nexport const DEFAULT_EXCHANGE_KEY_PAIR_NAME = 'exchange-key-pair'\nexport const DEFAULT_WRITE_KEY_PAIR_NAME = 'write-key-pair'\nexport const DEFAULT_ESCROW_KEY_NAME = 'escrow-key'\n\nexport default {\n  ECC_EXCHANGE_ALG,\n  ECC_WRITE_ALG,\n  DEFAULT_SALT_LENGTH,\n  DEFAULT_ECC_CURVE,\n  DEFAULT_SYMM_ALG,\n  DEFAULT_SYMM_KEY_LENGTH,\n  DEFAULT_HASH_ALG,\n  DEFAULT_CHAR_SIZE,\n  DEFAULT_STORE_NAME,\n  DEFAULT_EXCHANGE_KEY_PAIR_NAME,\n  DEFAULT_WRITE_KEY_PAIR_NAME,\n  DEFAULT_ESCROW_KEY_NAME,\n}\n", "import { webcrypto } from 'one-webcrypto';\nimport utils from '../utils.js';\nimport {\n  DEFAULT_SALT_LENGTH,\n  ECC_EXCHANGE_ALG,\n  ECC_WRITE_ALG,\n} from '../constants.js';\nimport {\n  EccCurve,\n  KeyUse,\n  PublicKey,\n  ExportKeyFormat,\n  SymmKey,\n  PrivateKey,\n} from '../types.js';\nimport { checkValidKeyUse } from '../errors.js';\n\n/**\n * Generate a new ECC key pair\n * @param curve The curve to use\n * @param use The use of the key pair, either exchange or write\n */\nexport async function genKeyPair(\n  curve: EccCurve,\n  use: KeyUse\n): Promise<CryptoKeyPair> {\n  checkValidKeyUse(use);\n  const alg = use === KeyUse.Exchange ? ECC_EXCHANGE_ALG : ECC_WRITE_ALG;\n  const uses: KeyUsage[] =\n    use === KeyUse.Exchange ? ['deriveBits'] : ['sign', 'verify'];\n  return webcrypto.subtle.generateKey(\n    { name: alg, namedCurve: curve },\n    true,\n    uses\n  );\n}\n\n/**\n * Import a public key from a base64 string\n * @param base64Key The base64 encoded public key\n * @param curve The curve to use\n * @param use The use of the key pair, either exchange or write\n */\nexport async function importPublicKey(\n  base64Key: string,\n  curve: EccCurve,\n  use: KeyUse\n): Promise<PublicKey> {\n  checkValidKeyUse(use);\n  const alg = use === KeyUse.Exchange ? ECC_EXCHANGE_ALG : ECC_WRITE_ALG;\n  const uses: KeyUsage[] =\n    use === KeyUse.Exchange ? ['deriveBits'] : ['verify'];\n  const buf = utils.base64ToArrBuf(base64Key);\n  return webcrypto.subtle.importKey(\n    ExportKeyFormat.SPKI,\n    buf,\n    { name: alg, namedCurve: curve },\n    true,\n    uses\n  );\n}\n\n/**\n * Import an escrowed private key\n * @param wrappedPrivateKeyStr The wrapped private key to import\n * @param unwrappingKey The symmetric key to use for unwrapping -- This cannot be AES-KW\n * @param curve The curve to use for the recovered key pair\n * @param use The use of the recovered key pair\n */\nexport async function importEscrowedPrivateKey(\n  wrappedPrivateKeyStr: string,\n  unwrappingKey: SymmKey,\n  curve: EccCurve,\n  use: KeyUse\n): Promise<PrivateKey> {\n  const alg = use === KeyUse.Exchange ? ECC_EXCHANGE_ALG : ECC_WRITE_ALG;\n  const uses: KeyUsage[] = use === KeyUse.Exchange ? ['deriveBits'] : ['sign'];\n  const cipherText = utils.normalizeBase64ToBuf(\n    wrappedPrivateKeyStr\n  );\n  const [iv, cipherBytes] = utils.splitCipherText(cipherText);\n  const privateKey = await webcrypto.subtle.unwrapKey(\n    ExportKeyFormat.PKCS8,\n    cipherBytes,\n    unwrappingKey,\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    {\n      name: alg,\n      namedCurve: curve,\n    },\n    true,\n    uses\n  );\n  return privateKey as PrivateKey;\n}\n\nexport async function importEscrowedKeyPair(\n  publicKeyStr: string,\n  wrappedPrivateKeyStr: string,\n  unwrappingKey: SymmKey,\n  curve: EccCurve,\n  use: KeyUse\n): Promise<CryptoKeyPair> {\n  const privateKey = await importEscrowedPrivateKey(\n    wrappedPrivateKeyStr,\n    unwrappingKey,\n    curve,\n    use\n  );\n  const publicKey = await importPublicKey(publicKeyStr, curve, use);\n  return { publicKey, privateKey };\n}\n\n/**\n * Export a public key to a base64 string\n * @param publicKey The public key to export\n */\nexport async function exportPublicKey(publicKey: PublicKey): Promise<string> {\n  const exp = await webcrypto.subtle.exportKey(ExportKeyFormat.SPKI, publicKey);\n  return utils.arrBufToBase64(exp);\n}\n\n/**\n * Escrow the private portion of an ECC key pair\n * @param privateKey The private key to escrow\n * @param wrappingKey The symmetric key to use for wrapping\n */\nexport async function exportEscrowedPrivateKey(\n  privateKey: PrivateKey,\n  wrappingKey: SymmKey\n): Promise<string> {\n  const salt = utils.randomBuf(DEFAULT_SALT_LENGTH);\n  return await webcrypto.subtle\n    .wrapKey(ExportKeyFormat.PKCS8, privateKey, wrappingKey, {\n      name: 'AES-GCM',\n      iv: salt,\n    })\n    .then((cipherBuf) => utils.joinCipherText(salt, cipherBuf))\n    .then(utils.arrBufToBase64);\n}\n\nexport default {\n  genKeyPair,\n  importPublicKey,\n  exportPublicKey,\n  exportEscrowedPrivateKey,\n  importEscrowedPrivateKey,\n  importEscrowedKeyPair,\n};\n", "import { webcrypto } from 'one-webcrypto';\nimport utils from '../utils.js';\nimport { DEFAULT_SYMM_ALG, DEFAULT_SYMM_KEY_LENGTH } from '../constants.js';\nimport { SymmKey, SymmKeyOpts, ExportKeyFormat } from '../types.js';\n\n/**\n * Generate a new symmetric key\n * @param uses The uses of the key, [ 'encrypt', 'decrypt' ] by default\n * @param opts The options for the key\n * @returns The generated symmetric key\n */\nexport async function genKey(\n  uses: KeyUsage[] = ['encrypt', 'decrypt'],\n  opts?: Partial<SymmKeyOpts>\n): Promise<SymmKey> {\n  return webcrypto.subtle.generateKey(\n    {\n      name: opts?.alg || DEFAULT_SYMM_ALG,\n      length: opts?.length || DEFAULT_SYMM_KEY_LENGTH,\n    },\n    true,\n    uses\n  );\n}\n\n/**\n * Import a symmetric key from a base64 string\n * @param base64key The base64 encoded symmetric key\n * @param uses The uses of the key, [ 'encrypt', 'decrypt' ] by default\n * @param opts The options for the key\n * @returns The imported symmetric key\n */\nexport async function importKey(\n  base64key: string,\n  uses: KeyUsage[] = ['encrypt', 'decrypt'],\n  opts?: Partial<SymmKeyOpts>\n): Promise<SymmKey> {\n  const buf = utils.base64ToArrBuf(base64key);\n  return webcrypto.subtle.importKey(\n    ExportKeyFormat.RAW,\n    buf,\n    {\n      name: opts?.alg || DEFAULT_SYMM_ALG,\n      length: opts?.length || DEFAULT_SYMM_KEY_LENGTH,\n    },\n    false,\n    uses\n  );\n}\n\n/**\n * Export a symmetric key to a base64 string\n * @param key The symmetric key to export\n * @returns The base64 encoded symmetric key\n */\nexport async function exportKey(key: CryptoKey): Promise<string> {\n  const exp = await webcrypto.subtle.exportKey(ExportKeyFormat.RAW, key);\n  return utils.arrBufToBase64(exp);\n}\n\nexport default {\n  genKey,\n  importKey,\n  exportKey,\n};\n", "import { webcrypto } from 'one-webcrypto';\nimport utils from '../utils.js';\nimport { DEFAULT_SALT_LENGTH, DEFAULT_SYMM_ALG } from '../constants.js';\nimport {\n  SymmKey,\n  SymmKeyOpts,\n  SymmWrappingKey,\n  SymmAlg,\n  CipherText,\n  Msg,\n  ExportKeyFormat,\n} from '../types.js';\nimport {\n  InvalidIvLength,\n  InvalidCipherTextLength,\n  UnsupportedSymmCrypto,\n} from '../errors.js';\n\n/**\n * Encrypt a message with a symmetric key\n * @param msg The message to encrypt\n * @param key The symmetric key to use for encryption\n * @param opts The options for encryption\n * @returns The CipherText (which is just an ArrayBuffer) of form [iv, '.', cipherBytes]\n */\nexport async function encryptBytes(\n  msg: Msg,\n  key: SymmKey,\n  opts?: Partial<SymmKeyOpts>\n): Promise<CipherText> {\n  const data = utils.normalizeUtf16ToBuf(msg);\n  const alg = opts?.alg || DEFAULT_SYMM_ALG;\n\n  // Note: we only support AES-GCM here\n  // If you want support for more symmetric key algorithms, add implementations here\n  if (alg !== SymmAlg.AES_GCM) {\n    throw UnsupportedSymmCrypto;\n  }\n\n  const iv = opts?.iv || utils.randomBuf(DEFAULT_SALT_LENGTH);\n  const cipherBuf = await webcrypto.subtle.encrypt(\n    {\n      name: alg,\n      iv,\n    },\n    key,\n    data\n  );\n  return utils.joinCipherText(iv, cipherBuf);\n}\n\n/**\n * Decrypt a CipherText of form [iv, '.', cipherBytes] with a symmetric key\n * @param msg The message to decrypt\n * @param key The symmetric key to use for decryption\n * @param opts The options for decryption\n * returns The decrypted message within an ArrayBuffer\n * throws InvalidIvLength\n * throws InvalidCipherTextLength\n * throws UnsupportedSymmCrypto\n */\nexport async function decryptBytes(\n  msg: Msg,\n  key: SymmKey,\n  opts?: Partial<SymmKeyOpts>\n): Promise<ArrayBuffer> {\n  const cipherText = utils.normalizeBase64ToBuf(msg);\n  const alg = opts?.alg || DEFAULT_SYMM_ALG;\n\n  // Note: we only support AES-GCM here\n  // If you want support for more symmetric key algorithms, add implementations here\n\n  if (alg !== SymmAlg.AES_GCM) {\n    throw UnsupportedSymmCrypto;\n  }\n\n  const [iv, cipherBytes] = utils.splitCipherText(cipherText);\n  // Check lengths\n  if (iv.byteLength !== 16) {\n    throw InvalidIvLength;\n  } else if (cipherBytes.byteLength === 0) {\n    throw InvalidCipherTextLength;\n  }\n\n  const msgBuff = await webcrypto.subtle.decrypt(\n    {\n      name: alg,\n      iv,\n    },\n    key,\n    cipherBytes\n  );\n  return msgBuff;\n}\n\n/*\n * Encrypt a message with a symmetric key\n * @param msg The message to encrypt\n * @param key The symmetric key to use for encryption\n * @param opts The options for encryption\n * @returns The CipherText (which is just an ArrayBuffer) of form [iv, '.', cipherBytes]\n * @throws UnsupportedSymmCrypto\n * @throws InvalidIvLength\n * @throws InvalidCipherTextLength\n */\nexport async function encrypt(\n  msg: Msg,\n  key: SymmKey,\n  opts?: Partial<SymmKeyOpts>\n): Promise<string> {\n  const cipherText = await encryptBytes(msg, key, opts);\n  return utils.arrBufToBase64(cipherText);\n}\n\n/**\n * Decrypt a CipherText of form [iv, '.', cipherBytes] with a symmetric key\n * @param msg The message to decrypt\n * @param key The symmetric key to use for decryption\n * @param opts The options for decryption\n * @returns The decrypted message\n * @throws UnsupportedSymmCrypto\n * @throws InvalidIvLength\n * @throws InvalidCipherTextLength\n */\nexport async function decrypt(\n  msg: Msg,\n  key: SymmKey,\n  opts?: Partial<SymmKeyOpts>\n): Promise<string> {\n  const msgBytes = await decryptBytes(msg, key, opts);\n  return utils.arrBufToStr(msgBytes, 16);\n}\n\n/**\n * Wrap a symmetric key with another symmetric key using AES-KW\n * key: The symmetric key to wrap\n * wrappingKey: The symmetric key to use for wrapping\n * opts: The options for wrapping\n * returns The wrapped key as an ArrayBuffer\n */\nexport async function wrapKey(\n  key: CryptoKey,\n  wrappingKey: SymmWrappingKey\n): Promise<CipherText> {\n  return await webcrypto.subtle.wrapKey(\n    ExportKeyFormat.RAW,\n    key,\n    wrappingKey,\n    'AES-KW'\n  );\n}\n\n/**\n * Unwrap a symmetric key with another symmetric key using AES-KW\n * wrappedKey: The wrapped key as an ArrayBuffer\n * unwrappingKey: The symmetric key to use for unwrapping\n * unwrappedKeyAlgParams: The algorithm parameters for the unwrapped key\n * extractable: Whether the unwrapped key is extractable\n * keyUsages: The usages for the unwrapped key\n * returns The unwrapped key as a CryptoKey\n */\nexport async function unwrapKey(\n  wrappedKey: CipherText,\n  unwrappingKey: SymmWrappingKey,\n  unwrappedKeyAlgParams: AlgorithmIdentifier,\n  extractable: boolean,\n  keyUsages: KeyUsage[]\n): Promise<CryptoKey> {\n  return await webcrypto.subtle.unwrapKey(\n    ExportKeyFormat.RAW,\n    wrappedKey,\n    unwrappingKey,\n    'AES-KW',\n    unwrappedKeyAlgParams,\n    extractable,\n    keyUsages\n  );\n}\n\nexport default {\n  encryptBytes,\n  decryptBytes,\n  encrypt,\n  decrypt,\n  wrapKey,\n  unwrapKey,\n};\n", "import keys from './keys.js';\nimport operations from './operations.js';\n\nexport * from './keys.js';\nexport * from './operations.js';\n\nexport default {\n  ...keys,\n  ...operations,\n};\n", "import { webcrypto } from 'one-webcrypto';\nimport { HashAlg, SymmKeyOpts, ExportKeyFormat, SymmKey } from '../types';\nimport {\n  DEFAULT_HASH_ALG,\n  DEFAULT_SYMM_ALG,\n  DEFAULT_SYMM_KEY_LENGTH,\n} from '../constants';\n\n/**\n * Derive a symmetric key from an input keying material (IKM) using HKDF.\n * @param ikm Input keying material. This must be key material with high entropy. Passwords are not recommended or safe.\n * @param salt  Salt value (a non-secret random value). Make sure to use a unique salt for each key you derive, and use an appropriate length.\n * @param infoStr Optional context and application specific information.\n * @param hashAlg Hash algorithm to use. Default is SHA-256.\n * @param uses Key usage. Default is encrypt/decrypt.\n * @param opts Optional symmetric key options.\n * @returns A promise that resolves to a CryptoKey\n */\nexport async function deriveKey(\n  ikm: ArrayBuffer,\n  salt: ArrayBuffer,\n  infoStr = 'default-info',\n  hashAlg: HashAlg = DEFAULT_HASH_ALG,\n  uses: KeyUsage[] = ['encrypt', 'decrypt'],\n  opts?: Partial<SymmKeyOpts>\n): Promise<SymmKey> {\n  const enc = new TextEncoder();\n  return await webcrypto.subtle\n    .importKey(ExportKeyFormat.RAW, ikm, 'HKDF', false, ['deriveBits'])\n    .then((baseKey) =>\n      webcrypto.subtle.deriveBits(\n        {\n          name: 'HKDF',\n          hash: hashAlg,\n          salt,\n          info: enc.encode(infoStr),\n        },\n        baseKey,\n        opts?.length || DEFAULT_SYMM_KEY_LENGTH\n      )\n    )\n    .then((bits) =>\n      webcrypto.subtle.importKey(\n        ExportKeyFormat.RAW,\n        bits,\n        opts?.alg || DEFAULT_SYMM_ALG,\n        true,\n        uses\n      )\n    );\n}\n\nexport default {\n  deriveKey,\n};\n", "import operations from './operations.js';\n\nexport * from './operations.js';\n\nexport default {\n  ...operations,\n};\n", "import aes from '../aes/index.js';\nimport utils, {\n  normalizeBase64ToBuf,\n  normalizeUnicodeToBuf,\n} from '../utils.js';\nimport {\n  DEFAULT_CHAR_SIZE,\n  DEFAULT_ECC_CURVE,\n  DEFAULT_HASH_ALG,\n  ECC_EXCHANGE_ALG,\n  ECC_WRITE_ALG,\n} from '../constants.js';\nimport hkdf from '../hkdf/index.js';\nimport {\n  CharSize,\n  Msg,\n  PrivateKey,\n  PublicKey,\n  HashAlg,\n  SymmKey,\n  SymmKeyOpts,\n  EccCurve,\n  CipherText,\n} from '../types.js';\nimport { webcrypto } from 'one-webcrypto';\n\n/**\n * Sign a message with an ECSDSA private key\n * @param msg The message to sign\n * @param privateKey The private key to use for signing\n * @param charSize The character size to use for normalization\n * @param hashAlg The hash algorithm to use for signing\n * @returns The signature as an ArrayBuffer\n */\nexport async function sign(\n  msg: Msg,\n  privateKey: PrivateKey,\n  charSize: CharSize = DEFAULT_CHAR_SIZE,\n  hashAlg: HashAlg = DEFAULT_HASH_ALG\n): Promise<ArrayBuffer> {\n  return webcrypto.subtle.sign(\n    { name: ECC_WRITE_ALG, hash: { name: hashAlg } },\n    privateKey,\n    normalizeUnicodeToBuf(msg, charSize)\n  );\n}\n\n/**\n * Verify a message with an ECDSA public key\n * @param msg The message to verify\n * @param sig The signature to verify\n * @param publicKey The public key to use for verification\n * @param charSize The character size to use for normalization\n * @param hashAlg The hash algorithm to use for verification\n * @returns A promise that resolves to a boolean indicating whether the signature is valid\n */\nexport async function verify(\n  msg: Msg,\n  sig: Msg,\n  publicKey: PublicKey,\n  charSize: CharSize = DEFAULT_CHAR_SIZE,\n  hashAlg: HashAlg = DEFAULT_HASH_ALG\n): Promise<boolean> {\n  return webcrypto.subtle.verify(\n    { name: ECC_WRITE_ALG, hash: { name: hashAlg } },\n    publicKey,\n    normalizeBase64ToBuf(sig),\n    normalizeUnicodeToBuf(msg, charSize)\n  );\n}\n\n/**\n * Encrypt a message with a shared public key and your own private key\n * @param msg The message to encrypt\n * @param privateKey Your private key\n * @param publicKey The public key to encrypt with\n * @param derivationSalt The salt to use for key derivation\n * @param charSize The character size to use for normalization\n * @param opts The options for encryption\n * @throws {UnsupportedSymmCrypto} If the symmetric algorithm is not supported\n */\nexport async function encrypt(\n  msg: Msg,\n  privateKey: PrivateKey,\n  publicKey: PublicKey,\n  derivationSalt: ArrayBuffer,\n  curve: EccCurve = DEFAULT_ECC_CURVE,\n  hashAlg: HashAlg = DEFAULT_HASH_ALG,\n  charSize: CharSize = DEFAULT_CHAR_SIZE,\n  opts?: Partial<SymmKeyOpts>\n): Promise<ArrayBuffer> {\n  const cipherKey = await getSharedKey(\n    privateKey,\n    publicKey,\n    derivationSalt,\n    ['encrypt'],\n    'shared-encryption-key',\n    curve,\n    hashAlg,\n    opts\n  );\n  return aes.encryptBytes(\n    normalizeUnicodeToBuf(msg, charSize),\n    cipherKey,\n    opts\n  );\n}\n\n/**\n * Decrypt a message with a shared public key and your own private key\n * @param msg The message to decrypt\n * @param privateKey Your private key\n * @param publicKey The public key to decrypt with\n * @param derivationSalt The salt to use for key derivation\n * @param curve The curve to use for key derivation\n * @param charSize The character size to use for normalization\n * @param opts The options for decryption\n * @returns The decrypted message as a string\n * @throws {InvalidCipherTextLength} If the cipher text is not the correct length\n * @throws {UnsupportedSymmCrypto} If the symmetric algorithm is not supported\n */\nexport async function decrypt(\n  msg: Msg,\n  privateKey: PrivateKey,\n  publicKey: PublicKey,\n  derivationSalt: ArrayBuffer,\n  curve: EccCurve = DEFAULT_ECC_CURVE,\n  hashAlg: HashAlg = DEFAULT_HASH_ALG,\n  opts?: Partial<SymmKeyOpts>\n): Promise<ArrayBuffer> {\n  const cipherKey = await getSharedKey(\n    privateKey,\n    publicKey,\n    derivationSalt,\n    ['decrypt'],\n    'shared-encryption-key',\n    curve,\n    hashAlg,\n    opts\n  );\n  return aes.decryptBytes(normalizeBase64ToBuf(msg), cipherKey, opts);\n}\n\n/**\n * Wrap a key with a shared public key and your own private key\n * @param key The key to wrap\n * @param privateKey Your private key\n * @param publicKey The public key to wrap with\n * @param derivationSalt The salt to use for key derivation\n * @param curve The curve to use for key derivation\n * @param charSize The character size to use for normalization\n * @param opts The options for wrapping\n * @returns The wrapped key as a CipherText (which is just an ArrayBuffer)\n */\nexport async function wrapKey(\n  key: CryptoKey,\n  privateKey: PrivateKey,\n  publicKey: PublicKey,\n  derivationSalt: ArrayBuffer,\n  curve: EccCurve = DEFAULT_ECC_CURVE,\n  hashAlg: HashAlg = DEFAULT_HASH_ALG,\n  opts?: Partial<SymmKeyOpts>\n): Promise<CipherText> {\n  const cipherKey = await getSharedKey(\n    privateKey,\n    publicKey,\n    derivationSalt,\n    ['wrapKey'],\n    'shared-encryption-key',\n    curve,\n    hashAlg,\n    opts\n  );\n  return aes.wrapKey(key, cipherKey);\n}\n\n/**\n * Unwrap a key with a shared public key and your own private key\n * @param key The key to unwrap\n * @param privateKey Your private key\n * @param publicKey The public key to unwrap with\n * @param derivationSalt The salt to use for key derivation\n * @param unwrappedKeyAlgParams The algorithm parameters for the unwrapped key\n * @param extractable Whether or not the unwrapped key is extractable\n * @param keyUsages The key usages for the unwrapped key\n * @param curve The curve to use for key derivation\n * @param charSize The character size to use for normalization\n * @param opts The options for unwrapping\n * @returns The unwrapped key as a CryptoKey\n */\nexport async function unwrapKey(\n  key: CipherText,\n  privateKey: PrivateKey,\n  publicKey: PublicKey,\n  derivationSalt: ArrayBuffer,\n  unwrappedKeyAlgParams: AlgorithmIdentifier,\n  extractable: boolean,\n  keyUsages: KeyUsage[],\n  curve: EccCurve = DEFAULT_ECC_CURVE,\n  hashAlg: HashAlg = DEFAULT_HASH_ALG,\n  opts?: Partial<SymmKeyOpts>\n): Promise<CryptoKey> {\n  const cipherKey = await getSharedKey(\n    privateKey,\n    publicKey,\n    derivationSalt,\n    ['unwrapKey'],\n    'shared-encryption-key',\n    curve,\n    hashAlg,\n    opts\n  );\n  return aes.unwrapKey(\n    key,\n    cipherKey,\n    unwrappedKeyAlgParams,\n    extractable,\n    keyUsages\n  );\n}\n\n/* Key Derivation Helpers */\n\nasync function getSharedKey(\n  privateKey: PrivateKey,\n  publicKey: PublicKey,\n  derivationSalt: ArrayBuffer,\n  uses: KeyUsage[],\n  keyInfo: string,\n  curve: EccCurve = DEFAULT_ECC_CURVE,\n  hashAlg: HashAlg = DEFAULT_HASH_ALG,\n  opts?: Partial<SymmKeyOpts>\n): Promise<SymmKey> {\n  const bitLength = utils.eccCurveToBitLength(curve);\n  return webcrypto.subtle\n    .deriveBits(\n      { name: ECC_EXCHANGE_ALG, public: publicKey },\n      privateKey,\n      bitLength\n    )\n    .then((bits) =>\n      hkdf.deriveKey(bits, derivationSalt, keyInfo, hashAlg, uses, opts)\n    );\n}\n\nexport default {\n  sign,\n  verify,\n  encrypt,\n  decrypt,\n  wrapKey,\n  unwrapKey,\n};\n", "import ecc from './ecc/keys.js'\nimport {\n  ECC_EXCHANGE_ALG,\n  ECC_WRITE_ALG,\n  DEFAULT_ECC_CURVE,\n  DEFAULT_SYMM_ALG,\n  DEFAULT_SYMM_KEY_LENGTH,\n  DEFAULT_HASH_ALG,\n  DEFAULT_CHAR_SIZE,\n  DEFAULT_STORE_NAME,\n  DEFAULT_EXCHANGE_KEY_PAIR_NAME,\n  DEFAULT_WRITE_KEY_PAIR_NAME,\n  DEFAULT_ESCROW_KEY_NAME,\n} from './constants.js'\nimport { Config, KeyUse, CryptoSystem, SymmKeyOpts } from './types.js'\nimport utils from './utils.js'\n\nexport const defaultConfig = {\n  exchangeAlg: ECC_EXCHANGE_ALG,\n  writeAlg: ECC_WRITE_ALG,\n  curve: DEFAULT_ECC_CURVE,\n  symmAlg: DEFAULT_SYMM_ALG,\n  symmKeyLength: DEFAULT_SYMM_KEY_LENGTH,\n  hashAlg: DEFAULT_HASH_ALG,\n  charSize: DEFAULT_CHAR_SIZE,\n  storeName: DEFAULT_STORE_NAME,\n  exchangeKeyPairName: DEFAULT_EXCHANGE_KEY_PAIR_NAME,\n  writeKeyPairName: DEFAULT_WRITE_KEY_PAIR_NAME,\n  escrowKeyName: DEFAULT_ESCROW_KEY_NAME\n} as Config\n\nexport function normalize(\n  maybeCfg?: Partial<Config>,\n): Config {\n  let cfg\n  if (!maybeCfg) {\n    cfg = defaultConfig\n  } else {\n    cfg = {\n      ...defaultConfig,\n      ...maybeCfg\n    }\n  }\n  return cfg\n}\n\n// Attempt a structural clone of an ECC Key (required to store in IndexedDB)\n// If it throws an error, use RSA, otherwise use ECC\nexport async function eccEnabled(): Promise<boolean> {\n  const keypair = await ecc.genKeyPair(DEFAULT_ECC_CURVE, KeyUse.Exchange)\n\n  try {\n    await utils.structuralClone(keypair)\n  } catch (err) {\n    return false\n  }\n  return true\n}\n\nexport function merge(cfg: Config, overwrites: Partial<Config> = {}): Config {\n  return {\n    ...cfg,\n    ...overwrites\n  }\n}\n\nexport function symmKeyOpts(cfg: Config): Partial<SymmKeyOpts> {\n  return { alg: cfg.symmAlg, length: cfg.symmKeyLength }\n}\n\nexport default {\n  defaultConfig,\n  normalize,\n  eccEnabled,\n  merge,\n  symmKeyOpts,\n}\n", "import localforage from 'localforage'\nimport { checkIsKeyPair, checkIsKey } from './errors.js'\n\n/* istanbul ignore next */\nexport function createStore(name: string): LocalForage {\n  return localforage.createInstance({ name })\n}\n\nexport async function create(id: string, makeFn: () => Promise<CryptoKeyPair | CryptoKey>, store: LocalForage = localforage): Promise<void> {\n  const key = await makeFn()\n  await put(id, key, store)\n}\n\nexport async function createIfDoesNotExist(id: string, makeFn: () => Promise<CryptoKeyPair | CryptoKey>, store: LocalForage = localforage): Promise<void> {\n  if(await exists(id, store)) {\n    return\n  }\n  const key = await makeFn()\n  await put(id, key, store)\n}\n\n/* istanbul ignore next */\nexport async function put(id: string, key: CryptoKeyPair | CryptoKey, store: LocalForage = localforage): Promise<CryptoKeyPair | CryptoKey> {\n\treturn store.setItem(id, key)\n}\n\n/* istanbul ignore next */\nexport async function getKeypair(id: string, store: LocalForage = localforage): Promise<CryptoKeyPair | null> {\n  return get(id, checkIsKeyPair, store)\n}\n\n/* istanbul ignore next */\nexport async function getKey(id: string, store: LocalForage = localforage): Promise<CryptoKey | null> {\n  return get(id, checkIsKey, store)\n}\n\n/* istanbul ignore next */\nexport async function get<T>(id: string, checkFn: (obj: unknown) => T | null, store: LocalForage = localforage) {\n  const item = await store.getItem(id)\n  return item === null ? null : checkFn(item)\n}\n\n/* istanbul ignore next */\nexport async function exists(id: string, store: LocalForage = localforage): Promise<boolean> {\n  const key = await store.getItem(id)\n  return key !== null\n}\n\n/* istanbul ignore next */\nexport async function rm(id: string, store: LocalForage = localforage): Promise<void> {\n  return store.removeItem(id)\n}\n\nexport async function dropStore(store: LocalForage): Promise<void> {\n  return store.dropInstance()\n}\n\n/* istanbul ignore next */\nexport async function clear(store?: LocalForage): Promise<void> {\n  if(store){\n    return dropStore(store)\n  } else {\n    return localforage.clear()\n  }\n}\n\nexport default {\n  createStore,\n  createIfDoesNotExist,\n  put,\n  getKeypair,\n\tgetKey,\n  exists,\n  rm,\n  dropStore,\n\tclear\n}\n"],
  "mappings": "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",
  "names": []
}

/*
 * Banyan Core Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiSubscriptionFeatures {
    #[serde(rename = "archival_available")]
    pub archival_available: bool,
    #[serde(rename = "included_hot_replica_count")]
    pub included_hot_replica_count: i64,
    #[serde(rename = "included_hot_storage")]
    pub included_hot_storage: i64,
    #[serde(rename = "included_bandwidth")]
    pub included_bandwidth: i64,
    #[serde(rename = "archival_hard_limit", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub archival_hard_limit: Option<Option<i64>>,
    #[serde(rename = "hot_storage_hard_limit", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub hot_storage_hard_limit: Option<Option<i64>>,
    #[serde(rename = "bandwidth_hard_limit", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub bandwidth_hard_limit: Option<Option<i64>>,
}

impl ApiSubscriptionFeatures {
    pub fn new(archival_available: bool, included_hot_replica_count: i64, included_hot_storage: i64, included_bandwidth: i64) -> ApiSubscriptionFeatures {
        ApiSubscriptionFeatures {
            archival_available,
            included_hot_replica_count,
            included_hot_storage,
            included_bandwidth,
            archival_hard_limit: None,
            hot_storage_hard_limit: None,
            bandwidth_hard_limit: None,
        }
    }
}


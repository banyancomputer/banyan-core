/*
 * Banyan Core Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiMetadata {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "root_cid")]
    pub root_cid: String,
    #[serde(rename = "metadata_cid")]
    pub metadata_cid: String,
    #[serde(rename = "data_size")]
    pub data_size: f64,
    #[serde(rename = "state")]
    pub state: models::MetadataState,
    #[serde(rename = "created_at")]
    pub created_at: f64,
    #[serde(rename = "updated_at")]
    pub updated_at: f64,
    #[serde(rename = "snapshot_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub snapshot_id: Option<Option<String>>,
}

impl ApiMetadata {
    pub fn new(id: String, root_cid: String, metadata_cid: String, data_size: f64, state: models::MetadataState, created_at: f64, updated_at: f64) -> ApiMetadata {
        ApiMetadata {
            id,
            root_cid,
            metadata_cid,
            data_size,
            state,
            created_at,
            updated_at,
            snapshot_id: None,
        }
    }
}


/*
 * Banyan Core Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MetadataState {
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "deleted")]
    Deleted,

}

impl ToString for MetadataState {
    fn to_string(&self) -> String {
        match self {
            Self::Active => String::from("active"),
            Self::Inactive => String::from("inactive"),
            Self::Deleted => String::from("deleted"),
        }
    }
}

impl Default for MetadataState {
    fn default() -> MetadataState {
        Self::Active
    }
}


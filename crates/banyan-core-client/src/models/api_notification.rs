/*
 * Banyan Core Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiNotification {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "user_id")]
    pub user_id: String,
    #[serde(rename = "dismissable")]
    pub dismissable: bool,
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "message_key")]
    pub message_key: String,
    #[serde(rename = "severity")]
    pub severity: String,
    #[serde(rename = "created_at")]
    pub created_at: i64,
}

impl ApiNotification {
    pub fn new(id: String, user_id: String, dismissable: bool, message: String, message_key: String, severity: String, created_at: i64) -> ApiNotification {
        ApiNotification {
            id,
            user_id,
            dismissable,
            message,
            message_key,
            severity,
            created_at,
        }
    }
}


/*
 * Banyan Core Service API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiSnapshot {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "bucket_id")]
    pub bucket_id: String,
    #[serde(rename = "metadata_id")]
    pub metadata_id: String,
    #[serde(rename = "size", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub size: Option<Option<i64>>,
    #[serde(rename = "state")]
    pub state: String,
    #[serde(rename = "created_at")]
    pub created_at: i64,
}

impl ApiSnapshot {
    pub fn new(id: String, bucket_id: String, metadata_id: String, state: String, created_at: i64) -> ApiSnapshot {
        ApiSnapshot {
            id,
            bucket_id,
            metadata_id,
            size: None,
            state,
            created_at,
        }
    }
}


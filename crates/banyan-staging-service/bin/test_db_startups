#!/bin/bash

set -o errexit

cd $(dirname %0)

POSTGRES_PORT=6782

CONTAINER_RUNTIME="podman"
if which docker &> /dev/null; then
  CONTAINER_RUNTIME="docker"
fi

function postgres_setup() {
  cat << EOS | ${CONTAINER_RUNTIME} exec -i --user postgres db-boot-test psql
CREATE ROLE test_user WITH LOGIN PASSWORD 'test_password';
CREATE DATABASE test_db WITH OWNER test_user;
EOS

  export DATABASE_URL="postgres://test_user:test_password@127.0.0.1:${POSTGRES_PORT}/test_db"

  cargo build
  timeout 30 cargo run --no-default-features --features postgres || /bin/true
}

function postgres_init() {
  ${CONTAINER_RUNTIME} run -d --rm -e POSTGRES_PASSWORD=superuser_pass --replace -p ${POSTGRES_PORT}:5432 --name db-boot-test docker.io/library/postgres:alpine
  sleep 2.5
}

function postgres_teardown() {
  ${CONTAINER_RUNTIME} kill db-boot-test || true
}

function sqlite_setup() {
  export DATABASE_URL="sqlite://:memory:"

  cargo build
  timeout 30 cargo run --no-default-features --features sqlite || /bin/true
}

sqlite_setup

postgres_init
postgres_setup
postgres_teardown

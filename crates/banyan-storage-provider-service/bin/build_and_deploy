#!/usr/bin/env bash

set -o errexit

cd $(dirname %0)

SERVICE_NAME="${1:-banyan-sp}"
SERVICE_PORT="${2:-3000}"
SERVICE_ARGUMENTS="--auth-key /data/platform-auth.key --hostname https://${DEPLOY_HOST}/ --verifier-key /data/platform-verifier.public --upload-dir /data/uploads --platform-url https://api.data.banyan.computer"

# Everything beyond this point isn't expected to be changed between services

ORG="banyan.computer"
NAMESPACE="platform"
IMAGE="${SERVICE_NAME}"

if [ "${DRY_RUN}" != "1" ] && (! git diff-index --quiet HEAD -- || ! git diff-files --quiet); then
	echo "!!> Branch is dirty, can't build and deploy from this branch"
	exit 1
fi

COMMIT_ID="$(git describe --always --dirty --long --tags)"
# Use the latest commit timestamp as its consistent, and reproducible
TIMESTAMP="$(git show -s --date=format:'%Y%m%d-%H%M%S' --format=%cd)"

IMAGE_BASE_NAME="${NAMESPACE}_${IMAGE}_${TIMESTAMP}_${COMMIT_ID}"
FULL_IMAGE_NAME="${ORG}/${NAMESPACE}/${IMAGE}:${COMMIT_ID}"

TMP_IMAGE="$(mktemp /tmp/${SERVICE_NAME}.XXXXX.tar)"

CONTAINER_RUNTIME="podman"
if which docker &>/dev/null; then
	CONTAINER_RUNTIME="docker"
fi

# Create the actual container
(
	cd ../..
	${CONTAINER_RUNTIME} build -t ${FULL_IMAGE_NAME} \
		--build-arg CI_BUILD_REF=${COMMIT_ID} \
		--build-arg CRATE_NAME=banyan-storage-provider-service .
)

${CONTAINER_RUNTIME} save -o ${TMP_IMAGE} ${FULL_IMAGE_NAME} &>/dev/null

echo '==> Image successfully built and exported'
